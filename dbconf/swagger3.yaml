swagger: "2.0"
info:
  title: Air-conditioner Api
  description: API.
  version: 1.0.0
#host: localhost:3030
host: air-condition.herokuapp.com
basePath: /api
schemes:
  - https
  - http
paths:
  /info:
    get:
      tags:
        - "mainInfo"
      summary: Returns all mainInfo.
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
    post:
      tags:
        - "mainInfo"
      summary: "Add mainInfo in the store with form data"
      description: ""
      operationId: "add"
      consumes:
        - form-data
      produces:
        - "form-data"
      parameters:
        - in: formData
          name: name
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: about
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: address
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: phones
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: email
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: photo
          type: file
          required: true
          description: The file to upload.
      responses:
        405:
          description: "Invalid input"
    delete:
      tags:
        - "mainInfo"
      summary: "Deletes a mainInfo"
      description: ""
      operationId: "delete mainInfo"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "delete - mainInfo - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "gallery not found"
  /client:
    get:
      tags:
        - "client"
      summary: Returns all client.
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: _id
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /client/single:
    get:
#      deprecated: true
      tags:
        - "client"
      summary: "Find single client"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "finditemByData"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "clientId"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#"
        400:
          description: "Invalid status value"
    post:
      tags:
        - "client"
      summary: "Add client in the store with form data"
      description: ""
      operationId: "updatePetWithForm"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "client object add"
          required: true
          schema:
            $ref: "#/definitions/Client"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
        - "client"
      summary: "Updated client"
      description: "This can only be done by the logged in client."
      operationId: "updateclient"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "client"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "client object put"
          required: true
          schema:
            $ref: "#/definitions/Client"
      responses:
        400:
          description: "Invalid client supplied"
        404:
          description: "client not found"
    delete:
      tags:
        - "client"
      summary: "Deletes a client"
      description: ""
      operationId: "delete client"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "delete - client - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "client not found"


  /item:
    get:
      tags:
        - "item"
      summary: Returns all item.
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: _id
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /item/single:
    get:
      #      deprecated: true
      tags:
        - "item"
      summary: "Find single item"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "finditemByData"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "itemId"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#"
        400:
          description: "Invalid status value"
    post:
      tags:
        - "item"
      summary: "Add item in the store with form data"
      description: ""
      operationId: "updatePetWithForm"
      consumes:
        - form-data
      produces:
        - "form-data"
      parameters:
        - in: formData
          name: photo
          type: file
          required: true
          description: The file to upload.
        - in: formData
          name: title
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: subTitle
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: description
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: price
          type: "integer"
          format: "int32"
          required: false
          description: Description of file contents.
        - in: formData
          name: notes
          type: string
          required: false
          description: Description of file contents.
        - in: formData
          name: isActive
          type: boolean
          required: false
          description: Description of file contents.







      responses:
        405:
          description: "Invalid input"
    put:
      tags:
        - "item"
      summary: "Updated item"
      description: "This can only be done by the logged in item."
      operationId: "updateitem"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "item"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "item object put"
          required: true
          schema:
            $ref: "#/definitions/Item"
      responses:
        400:
          description: "Invalid item supplied"
        404:
          description: "item not found"
    delete:
      tags:
        - "item"
      summary: "Deletes a item"
      description: ""
      operationId: "delete item"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "delete - item - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "item not found"


  /service:
    get:
      tags:
        - "service"
      summary: Returns all service.
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: _id
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /service/single:
    post:
      tags:
        - "service"
      summary: "Add service in the store with form data"
      description: ""
      operationId: "updatePetWithForm"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "service object add"
          required: true
          schema:
            $ref: "#/definitions/Service"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
        - "service"
      summary: "Updated service"
      description: "This can only be done by the logged in service."
      operationId: "updateclient"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "service"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "client object put"
          required: true
          schema:
            $ref: "#/definitions/Service"
      responses:
        400:
          description: "Invalid client supplied"
        404:
          description: "service not found"
    delete:
      tags:
        - "service"
      summary: "Deletes a service"
      description: ""
      operationId: "delete service"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "delete - service - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "client not found"



  /admin/login:
    post:
      tags:
        - "admin"
      summary: login to site.
      description: ""
      operationId: "updatePetWithForm"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
        - name: "email"
          in: "formData"
          description: "dima@gmail.com"
          required: true
          type: "string"
        - name: "password"
          in: "formData"
          description: "1111"
          required: true
          type: "string"
      responses:
        405:
          description: "Invalid input"
  /admin/logout:
    get:
      tags:
        - "admin"
      summary: logout admin.
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /admin:
    get:
      tags:
        - "admin"
      summary: Returns all admin.
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /admin/single:
    get:
      tags:
        - "admin"
      summary: "Find single admin"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findAdminByData"
      produces:
        - "application/json"
      #      parameters:
      #        - name: "id"
      #          in: "query"
      #          description: "5dd66a92f3a23a1b4065fa2a"
      #          required: true
      #          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#"
        400:
          description: "Invalid status value"
    post:
      tags:
        - "admin"
      summary: "Add admin in the store with form data"
      description: ""
      operationId: "updatePetWithForm"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/json"
      parameters:
        - name: "firstName"
          in: "formData"
          description: "add name of the admin"
          required: false
          type: "string"
        - name: "lastName"
          in: "formData"
          description: "add name of the admin"
          required: false
          type: "string"
        - name: "email"
          in: "formData"
          description: "add email of the admin"
          required: false
          type: "string"
        - name: "phone"
          in: formData
          description: "add email of the admin"
          required: false
          type: "string"
        - name: "password"
          in: "formData"
          description: "add password of the admin"
          required: false
          type: "string"
        - name: "role"
          in: "formData"
          description: "role"
          required: false
          type: "string"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
        - "admin"
      summary: "Updated admin"
      description: "This can only be done by the logged in admin."
      operationId: "updateAdmin"
      produces:
        - "application/json"
      consumes:
        - "application/x-www-form-urlencoded"
      parameters:
        - name: "id"
          in: "query"
          description: "5dde41fd7ac7e72f14479b69"
          required: true
          type: "string"
        - name: "firstName"
          in: "formData"
          description: "add name of the admin"
          required: false
          type: "string"
        - name: "lastName"
          in: "formData"
          description: "add name of the admin"
          required: false
          type: "string"
        - name: "email"
          in: "formData"
          description: "add email of the admin"
          required: false
          type: "string"
        - name: "phone"
          in: formData
          description: "add email of the admin"
          required: false
          type: "string"
        - name: "password"
          in: "formData"
          description: "add password of the admin"
          required: false
          type: "string"
      responses:
        400:
          description: "Invalid admin supplied"
        404:
          description: "admin not found"
    delete:
      tags:
        - "admin"
      summary: "Deletes a admin"
      description: ""
      operationId: "deleteAdmin"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "delete - admin - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "admin not found"

  /gallery:
    get:
      tags:
        - "gallery"
      summary: Returns all gallery.
      parameters:
        - name: "_id"
          in: "query"
          description: "gallery _Id"
          type: "string"
        - name: "description"
          in: "query"
          description: "gallery category"
          type: "string"
      responses:
        200:
          description: OK
          schema:
            $ref: '#'
  /gallery/update:
    post:
      tags:
        - "gallery"
      summary: "update gallery in the store with form data"
      description: ""
      operationId: "updateGallery"
      consumes:
        - form-data
      produces:
        - "form-data"
      parameters:
        - in: formData
          name: id
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: description
          type: string
          required: false
          description: The file to upload.
        - in: formData
          name: isActive
          type: Boolean
          required: false
          description: The file to upload.
        - in: formData
          name: photo
          type: file
          required: false
          description: The file to upload.
      responses:
        405:
          description: "Invalid input"
  /gallery/single:
    get:
      deprecated: true
      tags:
        - "gallery"
      summary: "Find single gallery"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findgalleryByData"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "gallery Id"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#"
        400:
          description: "Invalid status value"
    post:
      tags:
        - "gallery"
      summary: "Add gallery in the store with form data"
      description: ""
      operationId: "updateGallery"
      consumes:
        - form-data
      produces:
        - "form-data"
      parameters:
        - in: formData
          name: description
          type: string
          required: true
          description: The file to upload.
        - in: formData
          name: photo
          type: file
          required: true
          description: The file to upload.
      responses:
        405:
          description: "Invalid input"
    delete:
      tags:
        - "gallery"
      summary: "Deletes a gallery"
      description: ""
      operationId: "delete gallery"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "delete - gallery - id"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "gallery not found"
definitions:
  Admin:
    type: "object"
    required:
    properties:
      lastName:
        type: "string"
      firstName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  Client:
    type: "object"
    properties:
      name:
        type: "string"
        required: true
      phone:
        type: "string"
        required: true
  Item:

    type: "object"
    properties:
      title:
        type: "string"
        required: true
      subTitle:
        type: "string"
        required: true
      description:
        type: "string"
        required: true
      price:
        type: "integer"
        format: "int32"
        required: true
      notes:
        type: "string"
        required: true
      isActive:
        type: "boolean"
        required: true


  Service:
    type: "object"
    properties:
      name:
        type: "string"
        required: true
      minPrice:
        type: "integer"
        format: "int32"
      maxPrice:
        type: "integer"
        format: "int32"

securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication  --> any value.
security:
  - basicAuth: []



